// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load,sel=address[12..14], a=r0,b=r1,c=r2,d=r3,e=r4,f=r5,g=r6,h=r7);
    RAM4K(in=in,load=r0,address=address[0..11],out=outr0);
    RAM4K(in=in,load=r1,address=address[0..11],out=outr1);
    RAM4K(in=in,load=r2,address=address[0..11],out=outr2);
    RAM4K(in=in,load=r3,address=address[0..11],out=outr3);
    RAM4K(in=in,load=r4,address=address[0..11],out=outr4);
    RAM4K(in=in,load=r5,address=address[0..11],out=outr5);
    RAM4K(in=in,load=r6,address=address[0..11],out=outr6);
    RAM4K(in=in,load=r7,address=address[0..11],out=outr7);
    Mux8Way16(a=outr0,b=outr1,c=outr2,d=outr3,e=outr4,f=outr5,g=outr6,h=outr7,sel=address[12..14],out=out);
}